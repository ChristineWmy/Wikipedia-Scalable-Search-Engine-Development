#!/bin/bash

set -Eeuo pipefail

# Sanity check command line options
usage() {
  echo "Usage: $0 (status|start|stop|restart)"
}

SQL_FILE=search/search/var/index.sqlite3
case $1 in
	"start")
		if [ -f "$SQL_FILE" ]; then
			set +o pipefail
			NPROCS=$(pgrep -f "flask run --host 0.0.0.0 --port 900[0-2]" | wc -l)
			set -o pipefail
			if [ "$NPROCS" -eq 3 ]; then
			  echo "Error: index server is already running"
			  exit 3
			elif [ "$NPROCS" -eq 1 ]; then
				if [ $(pgrep -f "flask run --host 0.0.0.0 --port 9000" | wc -l) -eq 1 ]; then
					FLASK_APP=index INDEX_PATH="inverted_index_1.txt" flask run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
					FLASK_APP=index INDEX_PATH="inverted_index_2.txt" flask run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
					echo "Error: index server is already running"
				  exit 3
				elif [ $(pgrep -f "flask run --host 0.0.0.0 --port 9001" | wc -l) -eq 1 ]; then
					FLASK_APP=index INDEX_PATH="inverted_index_0.txt" flask run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
					FLASK_APP=index INDEX_PATH="inverted_index_2.txt" flask run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
					echo "Error: index server is already running"
				  exit 3
				elif [ $(pgrep -f "flask run --host 0.0.0.0 --port 9002" | wc -l) -eq 1 ]; then
					FLASK_APP=index INDEX_PATH="inverted_index_0.txt" flask run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
					FLASK_APP=index INDEX_PATH="inverted_index_1.txt" flask run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
					echo "Error: index server is already running"
				  exit 3
				fi
			elif [ "$NPROCS" -eq 2 ]; then
				if [ $(pgrep -f "flask run --host 0.0.0.0 --port 9000" | wc -l) -eq 0 ]; then
					FLASK_APP=index INDEX_PATH="inverted_index_0.txt" flask run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
					echo "Error: index server is already running"
				  exit 3
				elif [ $(pgrep -f "flask run --host 0.0.0.0 --port 9001" | wc -l) -eq 0 ]; then
					FLASK_APP=index INDEX_PATH="inverted_index_1.txt" flask run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
					echo "Error: index server is already running"
				  exit 3
				elif [ $(pgrep -f "flask run --host 0.0.0.0 --port 9002" | wc -l) -eq 0 ]; then
					FLASK_APP=index INDEX_PATH="inverted_index_2.txt" flask run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
					echo "Error: index server is already running"
				  exit 3
				fi
			else
				mkdir -p var/log
				rm -f var/log/index.log
				FLASK_APP=index INDEX_PATH="inverted_index_0.txt" flask run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
				FLASK_APP=index INDEX_PATH="inverted_index_1.txt" flask run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
				FLASK_APP=index INDEX_PATH="inverted_index_2.txt" flask run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
				echo "starting index server ..."
			fi
		else
			echo "Error: can't find search database search/search/var/index.sqlite3"
			echo "Try: ./bin/indexdb create"
			exit 4
		fi
		;;

	"stop")
		echo "stopping index server ..."
		pkill -f "flask run --host 0.0.0.0 --port 9000" || true
		pkill -f "flask run --host 0.0.0.0 --port 9001" || true
		pkill -f "flask run --host 0.0.0.0 --port 9002" || true
		;;

	"restart")
		echo "stopping index server ..."
		pkill -f "flask run --host 0.0.0.0 --port 9000" || true
		pkill -f "flask run --host 0.0.0.0 --port 9001" || true
		pkill -f "flask run --host 0.0.0.0 --port 9002" || true
		echo "starting index server ..."
		mkdir -p var/log
		rm -f var/log/index.log
		FLASK_APP=index INDEX_PATH="inverted_index_0.txt" flask run --host 0.0.0.0 --port 9000 >> var/log/index.log 2>&1 &
		FLASK_APP=index INDEX_PATH="inverted_index_1.txt" flask run --host 0.0.0.0 --port 9001 >> var/log/index.log 2>&1 &
		FLASK_APP=index INDEX_PATH="inverted_index_2.txt" flask run --host 0.0.0.0 --port 9002 >> var/log/index.log 2>&1 &
		;;

	"status")
		set +o pipefail
		NPROCS=$(pgrep -f "flask run --host 0.0.0.0 --port 900[0-2]" | wc -l)
		set -o pipefail
		if [ "$NPROCS" -eq 3 ]; then
		  echo "index server running"
		  exit
		elif [ "$NPROCS" -eq 0 ]; then
		  echo "index server stopped"
		  exit 1
		else
		  echo "index server error: found ${NPROCS} processes, expected 3"
		  exit 2
		fi
		;;

	*)
		usage
		exit 1
		;;
esac
